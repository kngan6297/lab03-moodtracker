name: Manual Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Deployment Environment"
        required: true
        default: "production"
        type: choice
        options:
          - production
          - staging

jobs:
  manual-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Build JAR
        run: mvn clean package -DskipTests

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            # Stop existing application
            pkill -f mood-tracker || true
            sleep 5

            # Backup current application
            if [ -d "/var/www/lab03-moodtracker" ]; then
              cp -r /var/www/lab03-moodtracker /var/www/lab03-moodtracker.backup.$(date +%Y%m%d_%H%M%S)
            fi

            # Update application
            cd /var/www/lab03-moodtracker

            # Copy new JAR
            cp /tmp/target/mood-tracker-0.0.1-SNAPSHOT.jar target/
            chmod +x target/mood-tracker-0.0.1-SNAPSHOT.jar

            # Start application
            nohup java -jar target/mood-tracker-0.0.1-SNAPSHOT.jar --spring.profiles.active=prod > moodtracker.log 2>&1 &

            # Wait and check
            sleep 10
            if pgrep -f mood-tracker > /dev/null; then
              echo "✅ Manual deployment successful!"
              echo "🌐 Access at: http://${{ secrets.VPS_HOST }}:8080"
            else
              echo "❌ Deployment failed"
              tail -20 moodtracker.log
              exit 1
            fi
