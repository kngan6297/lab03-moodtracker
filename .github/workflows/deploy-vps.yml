name: Deploy to VPS

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn clean compile

      - name: Run tests
        run: mvn test

      - name: Build JAR
        run: mvn clean package -DskipTests

      - name: Copy JAR to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          source: "target/mood-tracker-0.0.1-SNAPSHOT.jar"
          target: "/var/www/lab03-moodtracker/target/"

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            # Stop existing application
            echo "🛑 Stopping existing application..."
            pkill -f mood-tracker || echo "No existing application found"
            sleep 5

            # Check if process is still running
            if pgrep -f mood-tracker > /dev/null; then
              echo "⚠️  Force killing existing application..."
              pkill -9 -f mood-tracker
              sleep 3
            fi

            # Backup existing application
            echo "💾 Creating backup..."
            if [ -d "/var/www/lab03-moodtracker" ]; then
              BACKUP_DIR="/var/www/lab03-moodtracker.backup.$(date +%Y%m%d_%H%M%S)"
              cp -r /var/www/lab03-moodtracker "$BACKUP_DIR"
              echo "✅ Backup created: $BACKUP_DIR"
            else
              echo "⚠️  No existing application directory found"
            fi

            # Create target directory if it doesn't exist
            echo "📁 Creating directories..."
            mkdir -p /var/www/lab03-moodtracker/target
            cd /var/www/lab03-moodtracker

            # Check if JAR file exists
            if [ ! -f "target/mood-tracker-0.0.1-SNAPSHOT.jar" ]; then
              echo "❌ JAR file not found: target/mood-tracker-0.0.1-SNAPSHOT.jar"
              echo "📋 Available files in target/:"
              ls -la target/ || echo "Target directory is empty"
              exit 1
            fi

            # Set proper permissions
            echo "🔐 Setting permissions..."
            chmod +x target/mood-tracker-0.0.1-SNAPSHOT.jar

            # Check Java installation
            echo "☕ Checking Java installation..."
            java -version || {
              echo "❌ Java is not installed or not in PATH"
              exit 1
            }

            # Detect available port
            PORT=8080
            if lsof -i:$PORT -t >/dev/null; then
              echo "⚠️ Port $PORT is in use. Trying 8081 instead..."
              PORT=8081
              if lsof -i:$PORT -t >/dev/null; then
                echo "❌ Both ports 8080 and 8081 are occupied. Aborting deployment."
                exit 1
              fi
            fi

            # Start application
            echo "🚀 Starting application on port $PORT with production profile..."
            nohup java -jar target/mood-tracker-0.0.1-SNAPSHOT.jar --server.port=$PORT --spring.profiles.active=prod > moodtracker.log 2>&1 &

            # Get the PID
            APP_PID=$!
            echo "📝 Application PID: $APP_PID"

            # Wait and verify
            echo "⏳ Waiting for application to start..."
            sleep 15

            if pgrep -f "mood-tracker.*$PORT" > /dev/null; then
              echo "✅ Application deployed successfully!"
              echo "🌐 Access at: http://${{ secrets.VPS_HOST }}:$PORT"
              echo "📊 Process info:"
              ps aux | grep "mood-tracker" | grep -v grep
              echo "📝 Recent logs:"
              tail -10 moodtracker.log
            else
              echo "❌ Application failed to start"
              echo "📝 Full application log:"
              cat moodtracker.log
              echo "🔍 Checking for errors..."
              grep -i error moodtracker.log || echo "No explicit errors found in log"
              exit 1
            fi

            echo "🎉 Deployment completed successfully!"
