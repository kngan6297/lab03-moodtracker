name: Deploy to VPS

on:
  push:
    branches: [master]
  workflow_dispatch:

env:
  APP_NAME: moodtracker
  JAR_FILE: mood-tracker-0.0.1-SNAPSHOT.jar
  DEPLOY_DIR: /var/www/lab03-moodtracker

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: 📦 Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: 🧱 Build with Maven
        run: mvn clean package -DskipTests

      - name: 🔐 Check secrets
        run: |
          if [ -z "${{ secrets.VPS_HOST }}" ]; then
            echo "❌ VPS_HOST secret is not configured"
            exit 1
          fi
          if [ -z "${{ secrets.VPS_USERNAME }}" ]; then
            echo "❌ VPS_USERNAME secret is not configured"
            exit 1
          fi
          if [ -z "${{ secrets.VPS_SSH_KEY }}" ]; then
            echo "❌ VPS_SSH_KEY secret is not configured"
            exit 1
          fi
          if [ -z "${{ secrets.VPS_PORT }}" ]; then
            echo "❌ VPS_PORT secret is not configured"
            exit 1
          fi
          echo "✅ All secrets are configured"

      - name: 📤 Upload JAR to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          source: "target/${{ env.JAR_FILE }}"
          target: "${{ env.DEPLOY_DIR }}/target/"

      - name: 🚀 Deploy via SSH with PM2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            echo "🔧 Preparing environment..."
            mkdir -p ${{ env.DEPLOY_DIR }}/target
            cd ${{ env.DEPLOY_DIR }}

            # Cài PM2 nếu chưa có
            if ! command -v pm2 &> /dev/null; then
              echo "📦 Installing PM2..."
              curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
              sudo apt install -y nodejs
              sudo npm install -g pm2
            fi

            # Dừng app cũ (nếu có)
            pm2 delete ${{ env.APP_NAME }} || echo "⚠️ App not running yet"

            # Chạy app mới
            echo "🚀 Starting new app..."
            pm2 start "java -jar target/${{ env.JAR_FILE }} --spring.profiles.active=prod" --name ${{ env.APP_NAME }}
            pm2 save

            echo "✅ App deployed and managed by PM2!"
